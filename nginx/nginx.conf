events {
    worker_connections 1024;
}

http {
    server {
        listen 80;
        
        # Direct proxy to frontend without upstream
        location / {
            proxy_pass http://frontend:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_connect_timeout 5s;
            proxy_read_timeout 10s;
            # Fallback for when frontend is not available
            error_page 502 503 504 /fallback;
        }
        
        # Direct proxy to backend
        location /api/ {
            proxy_pass http://backend:3001;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_connect_timeout 5s;
            proxy_read_timeout 10s;
            # Fallback for when backend is not available
            error_page 502 503 504 /api-fallback;
        }
        
        # Health check endpoint
        location /health {
            return 200 "nginx healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Fallback pages
        location /fallback {
            return 503 "Frontend service temporarily unavailable";
            add_header Content-Type text/plain;
        }
        
        location /api-fallback {
            return 503 "Backend service temporarily unavailable";
            add_header Content-Type text/plain;
        }
    }
}
